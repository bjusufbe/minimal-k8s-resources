apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.prometheus.serviceName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.prometheus.appLabel }}
    appVersion: {{ .Chart.AppVersion | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Values.prometheus.appLabel }}
  type: {{ .Values.prometheus.service.type }}
  ports:
  - name: web
    {{ if eq .Values.prometheus.service.type "NodePort" }}nodePort: {{ .Values.prometheus.service.nodePort }}{{ end }}
    port: 9090
    targetPort: 9090
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.prometheus.statefulSetName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.prometheus.appLabel }}
  replicas: {{ .Values.prometheus.replicaCount }}
  serviceName: {{ .Values.prometheus.serviceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.prometheus.appLabel }}
        appVersion: {{ .Chart.AppVersion | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.prometheus.rbac.serviceAccountName }}
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command: ["sh", "-c", "chmod -R 777 /prometheus"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: {{ .Values.prometheus.persistence.volumeName }}
          mountPath: /prometheus
      containers:
      - name: prometheus
        image: {{ .Values.prometheus.repository }}
        imagePullPolicy: {{ .Values.prometheus.pullPolicy }}
        resources:
          {{- toYaml .Values.prometheus.resources | nindent 10 }}
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: {{ .Values.prometheus.persistence.volumeName }}
          mountPath: /prometheus
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: {{ .Values.prometheus.configMapName }}
      {{- if not .Values.prometheus.persistence.enabled }}
      - name: {{ .Values.prometheus.persistence.volumeName }}
        emptyDir: {}
      {{- end}}
  {{- if .Values.prometheus.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.prometheus.persistence.volumeName }}
    spec:
      accessModes: {{ .Values.prometheus.persistence.accessModes }}
      storageClassName: {{ .Values.prometheus.persistence.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.prometheus.persistence.requestStorage }}
  {{- end }}