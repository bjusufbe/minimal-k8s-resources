apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: NodePort
  ports:
    - protocol: TCP
      name: grafana
      port: 3000
      targetPort: 3000
      nodePort: 32002
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: copy-datasource-permissions
        image: busybox:1.27.2
        command: ["sh", "-c", "cp /datasource_configmap/prometheus.yaml /tmp/datasource_files/prometheus.yaml"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: datasource
          mountPath: /datasource_configmap
        - name: datasource-tmp-files
          mountPath: /tmp/datasource_files
      containers:
      - image: grafana/grafana:5.0.0
        name: grafana-core
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana-secret
                key: username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana-secret
                key: password
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
        volumeMounts:
        - name: grafana-volume
          mountPath: /var/lib/grafana
        - name: datasource
          mountPath: /configmap/datasource_configmap
        - name: datasource-tmp-files
          mountPath: /etc/grafana/provisioning/datasources
      volumes:
      - name: datasource-tmp-files
        emptyDir: {}
      - name: datasource
        configMap:
          name: grafana-prometheus-datasource
  volumeClaimTemplates:
  - metadata:
      name: grafana-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gp2
      resources:
        requests:
          storage: 10Gi